[tool.poetry]
name = "Rate Limiter"
version = "0.1.0"
description = ""
authors = ["latentdream <guillaume.thibault.98@proton.me>"]

[tool.poetry.dependencies]
python = "^3.12"
numpy = "1.26.4"
oauthlib = "3.2.0"
pandas = "2.2.2"
python-dotenv = "1.0.1"
python-lsp-jsonrpc = "1.1.2"
python-lsp-server = "1.11.0"
pytoolconfig = "1.3.1"
regex = "2024.7.24"
requests = "2.32.3"
zipp = "1.0.0"
fastapi = "^0.115.8"
pydantic = "^2.10.6"
uvicorn = "^0.34.0"
httpx = "^0.28.1"
pydantic-settings = "^2.7.1"
aiofiles = "^24.1.0"
redis = "^5.2.1"
ploomber-cloud = "^0.4.1"
sqlalchemy = "^2.0.38"
alembic = "^1.14.1"
psycopg2-binary = "^2.9.10"
asyncpg = "^0.30.0"
aiosqlite = "^0.21.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
build = "^1.2.2"
ruff = "^0.6.8"
pytest-asyncio = "^0.25.3"
httpx = "^0.28.1"
pytest-cov = "^6.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = ["test"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["test/*", "src/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
